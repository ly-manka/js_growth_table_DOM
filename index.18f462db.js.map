{"mappings":"ACKA,IAAM,EAAQ,SAAS,aAAa,CAAC,UAC/B,EAAO,EAAM,IAAI,CAEjB,EAAY,SAAS,aAAa,CAAC,eACnC,EAAe,SAAS,aAAa,CAAC,eACtC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAkB,SAAS,aAAa,CAAC,kBAEzC,EAAgB,WACpB,EAAU,QAAQ,CAAG,EAAK,MAAM,EAZjB,GAaf,EAAa,QAAQ,CAAG,EAAK,MAAM,EAZpB,EAaf,EAAa,QAAQ,CAAG,CAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAd7B,GAef,EAAgB,QAAQ,CAAG,CAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAdhC,CAejB,EAsCA,EAAU,gBAAgB,CAAC,QApCZ,WACb,GAAI,EAAK,MAAM,CAnBA,GAmBa,CAG1B,IAAK,IAFC,EAAS,EAAM,SAAS,GAErB,EAAI,EAAG,EAAI,CAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAE,IACxC,EAAO,UAAU,GAEnB,GACF,CACF,GA4BA,EAAa,gBAAgB,CAAC,QA1BZ,WACZ,EAAK,MAAM,CA7BA,IA8Bb,EAAM,SAAS,CAAC,EAAK,MAAM,CAAG,GAC9B,IAEJ,GAsBA,EAAa,gBAAgB,CAAC,QApBZ,WAChB,GAAI,CAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CArCT,GAqCsB,CAC9B,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,CAAA,CAAA,OAAA,QAAA,CAAA,GAAb,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACC,UAAU,E,C,M,E,CADX,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAGL,GACF,CACF,GAcA,EAAgB,gBAAgB,CAAC,QAZZ,WACnB,GAAI,CAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CA7CT,EA6CsB,CAC9B,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,CAAA,CAAA,OAAA,QAAA,CAAA,GAAb,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,CACH,EAAI,UAAU,CAAC,EAAI,KAAK,CAAC,MAAM,CAAG,E,C,C,M,E,CAD/B,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAGL,GACF,CACF,GAOA","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar MAX_SIZE = 10;\nvar MIN_SIZE = 2;\nvar table = document.querySelector(\".field\");\nvar rows = table.rows;\nvar addRowBtn = document.querySelector(\".append-row\");\nvar deleteRowBtn = document.querySelector(\".remove-row\");\nvar addColumnBtn = document.querySelector(\".append-column\");\nvar deleteColumnBtn = document.querySelector(\".remove-column\");\nvar updateButtons = function() {\n    addRowBtn.disabled = rows.length >= MAX_SIZE;\n    deleteRowBtn.disabled = rows.length <= MIN_SIZE;\n    addColumnBtn.disabled = rows[0].cells.length >= MAX_SIZE;\n    deleteColumnBtn.disabled = rows[0].cells.length <= MIN_SIZE;\n};\nvar addRow = function() {\n    if (rows.length < MAX_SIZE) {\n        var newRow = table.insertRow();\n        for(var i = 0; i < rows[0].cells.length; i++)newRow.insertCell();\n        updateButtons();\n    }\n};\nvar deleteRow = function() {\n    if (rows.length > MIN_SIZE) {\n        table.deleteRow(rows.length - 1);\n        updateButtons();\n    }\n};\nvar addColumn = function() {\n    if (rows[0].cells.length < MAX_SIZE) {\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var row = _step.value;\n                row.insertCell();\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        updateButtons();\n    }\n};\nvar deleteColumn = function() {\n    if (rows[0].cells.length > MIN_SIZE) {\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var row = _step.value;\n                row.deleteCell(row.cells.length - 1);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        updateButtons();\n    }\n};\naddRowBtn.addEventListener(\"click\", addRow);\ndeleteRowBtn.addEventListener(\"click\", deleteRow);\naddColumnBtn.addEventListener(\"click\", addColumn);\ndeleteColumnBtn.addEventListener(\"click\", deleteColumn);\nupdateButtons();\n\n//# sourceMappingURL=index.18f462db.js.map\n","'use strict';\n\nconst MAX_SIZE = 10;\nconst MIN_SIZE = 2;\n\nconst table = document.querySelector('.field');\nconst rows = table.rows;\n\nconst addRowBtn = document.querySelector('.append-row');\nconst deleteRowBtn = document.querySelector('.remove-row');\nconst addColumnBtn = document.querySelector('.append-column');\nconst deleteColumnBtn = document.querySelector('.remove-column');\n\nconst updateButtons = () => {\n  addRowBtn.disabled = rows.length >= MAX_SIZE;\n  deleteRowBtn.disabled = rows.length <= MIN_SIZE;\n  addColumnBtn.disabled = rows[0].cells.length >= MAX_SIZE;\n  deleteColumnBtn.disabled = rows[0].cells.length <= MIN_SIZE;\n};\n\nconst addRow = () => {\n  if (rows.length < MAX_SIZE) {\n    const newRow = table.insertRow();\n\n    for (let i = 0; i < rows[0].cells.length; i++) {\n      newRow.insertCell();\n    }\n    updateButtons();\n  }\n};\n\nconst deleteRow = () => {\n  if (rows.length > MIN_SIZE) {\n    table.deleteRow(rows.length - 1);\n    updateButtons();\n  }\n};\n\nconst addColumn = () => {\n  if (rows[0].cells.length < MAX_SIZE) {\n    for (const row of rows) {\n      row.insertCell();\n    }\n    updateButtons();\n  }\n};\n\nconst deleteColumn = () => {\n  if (rows[0].cells.length > MIN_SIZE) {\n    for (const row of rows) {\n      row.deleteCell(row.cells.length - 1);\n    }\n    updateButtons();\n  }\n};\n\naddRowBtn.addEventListener('click', addRow);\ndeleteRowBtn.addEventListener('click', deleteRow);\naddColumnBtn.addEventListener('click', addColumn);\ndeleteColumnBtn.addEventListener('click', deleteColumn);\n\nupdateButtons();\n"],"names":["table","document","querySelector","rows","addRowBtn","deleteRowBtn","addColumnBtn","deleteColumnBtn","updateButtons","disabled","length","cells","addEventListener","newRow","insertRow","i","insertCell","deleteRow","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","row","value","err","return","deleteCell"],"version":3,"file":"index.18f462db.js.map"}